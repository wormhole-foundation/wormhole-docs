# llms.txt – site structure for AI systems

[Get Started with Core Contracts](https://wormhole.com/docs/build/core-messaging/core-contracts/): This guide walks through the key methods of the Core Contracts, providing you with the knowledge needed to integrate them into your cross-chain contracts
[Core Messaging Layer Contracts](https://wormhole.com/docs/build/core-messaging/): Learn to use Wormhole’s foundational messaging contracts to build multichain apps with direct control over publishing, verifying, relaying, and more.
[Wormhole-Deployed Relayers](https://wormhole.com/docs/build/core-messaging/wormhole-relayers/): Learn about the Wormhole-deployed relayer configuration for seamless cross-chain messaging between contracts on different EVM blockchains without off-chain deployments.
[Build with Wormhole](https://wormhole.com/docs/build/): Learn how to start building multichain solutions on Wormhole, with tips to get started, an overview of the toolkit, and an introduction to the protocols.
[Deploy MultiGov on EVM Chains](https://wormhole.com/docs/build/multigov/deploy-to-evm/): Set up and deploy MultiGov to EVM locally with step-by-step instructions for configuring, compiling, and deploying smart contracts across chains.
[MultiGov Deployment to Solana](https://wormhole.com/docs/build/multigov/deploy-to-solana/): Learn how to deploy the MultiGov Staking Program on Solana, including setup, funding, deployment, and configuration steps.
[MultiGov Technical FAQs](https://wormhole.com/docs/build/multigov/faq/): Find answers to common questions about MultiGov, covering cross-chain governance, technical setup, security, proposal creation, and more.
[Getting Started with MultiGov](https://wormhole.com/docs/build/multigov/): Learn how to get started with MultiGov, from evaluating cross-chain governance needs to deploying with help from the Tally team.
[Upgrading MultiGov on EVM](https://wormhole.com/docs/build/multigov/upgrade-evm/): Learn the process and key considerations for upgrading MultiGov on EVM, ensuring system integrity and careful planning across cross-chain components.
[Upgrading MultiGov on Solana](https://wormhole.com/docs/build/multigov/upgrade-solana/): Learn the process and key considerations for upgrading MultiGov on Solana, ensuring system integrity and careful planning across cross-chain components.
[Queries FAQs](https://wormhole.com/docs/build/queries/faqs/): Wormhole Queries FAQ covering available libraries, query examples, response formats, and details about running query proxy servers.
[Wormhole Queries](https://wormhole.com/docs/build/queries/): Wormhole Queries offers on-demand access to Guardian-attested on-chain data via a simple REST endpoint to initiate an off-chain request via a proxy.
[Queries Overview](https://wormhole.com/docs/build/queries/overview/): Explore Wormhole Queries, offering real-time access to verified blockchain data via a REST endpoint, enabling secure cross-chain interactions and verifications.
[Use Queries](https://wormhole.com/docs/build/queries/use-queries/): Explore a simple demo of interacting with Wormhole Queries using an eth_call request to query the supply of wETH on Ethereum using a Wormhole query.
[Chain IDs](https://wormhole.com/docs/build/reference/chain-ids/): This page documents the Wormhole-specific chain IDs for each chain and contrasts them to the more commonly referenced EVM chain IDs originating in EIP-155.
[Wormhole Finality | Consistency Levels](https://wormhole.com/docs/build/reference/consistency-levels/): This page documents how long to wait for finality before signing, based on each chain’s consistency (finality) level and consensus mechanism.
[Contract Addresses](https://wormhole.com/docs/build/reference/contract-addresses/): This page documents the deployed contract addresses of the Wormhole contracts on each chain, including Core Contracts, TokenBridge, and more.
[Reference](https://wormhole.com/docs/build/reference/): Find essential reference information for development, including canonical contract addresses, Wormhole chain IDs, and Wormhole finality levels for Guardians.
[Wormhole Formatted Addresses](https://wormhole.com/docs/build/reference/wormhole-formatted-addresses/): Explanation of Wormhole formatted 32-byte hex addresses, their conversion, and usage across different blockchain platforms.
[Start Building](https://wormhole.com/docs/build/start-building/): This section has all you need to start developing with Wormhole, including a guide to supported networks, tool sets, and code examples.
[Compare Wormhole's Cross-Chain Solutions](https://wormhole.com/docs/build/start-building/products/): Compare Wormhole’s cross-chain solutions for bridging, native transfers, data queries, and governance to enable seamless blockchain interoperability.
[Supported Networks](https://wormhole.com/docs/build/start-building/supported-networks/): Learn about the compatible environments and individual networks that Wormhole supports. Readers can click on each of the blockchain logos for more information.
[Testnet Faucets](https://wormhole.com/docs/build/start-building/testnet-faucets/): This page includes resources to quickly find the Testnet tokens you need to deploy and test applications and contracts on Wormhole's supported networks.
[Use Cases](https://wormhole.com/docs/build/start-building/use-cases/): Explore Wormhole's use cases, from cross-chain swaps to DeFi, lending, gaming, and more. See how projects integrate Wormhole solutions.
[Wormhole CLI](https://wormhole.com/docs/build/toolkit/cli/): Learn how to install and use the Wormhole CLI, including commands and examples for managing multichain deployments, generating VAAs, and querying contract info.
[Local Dev Environment](https://wormhole.com/docs/build/toolkit/dev-env/): Learn how to configure a development environment to build with Wormhole, including using the CLI, local validators, testing on public test networks, and more.
[Toolkit FAQs](https://wormhole.com/docs/build/toolkit/faqs/): FAQs on Wormhole Toolkit, covering Wormholescan, CLI, SDKs (TypeScript, Solidity), Tilt, error handling, transaction history, and manual VAA submission.
[Wormhole Tooling](https://wormhole.com/docs/build/toolkit/): This page lists key dev tools, including the WormholeScan Explorer, Wormhole CLI, Wormhole SDKs, and APIs for querying network data.
[Solidity SDK](https://wormhole.com/docs/build/toolkit/solidity-sdk/): How to use the Wormhole Solidity SDK for cross-chain messaging, token transfers, and integrating decentralized applications on EVM-compatible blockchains.
[Wormhole SDK](https://wormhole.com/docs/build/toolkit/typescript-sdk/): The Wormhole SDK provides tools for cross-chain communication, token bridges, and more, enabling developers to integrate with multiple blockchain environments.
[Building Protocols and Payloads](https://wormhole.com/docs/build/toolkit/typescript-sdk/protocols-payloads/): Learn how to build, register, and integrate protocols and payloads in the Wormhole TypeScript SDK with type-safe layouts.
[Data Layouts](https://wormhole.com/docs/build/toolkit/typescript-sdk/sdk-layout/): Learn how to efficiently define, serialize, and deserialize data structures using Wormhole SDK's layout system for cross-chain communication.
[VAAs and Protocols](https://wormhole.com/docs/build/toolkit/typescript-sdk/vaas-protocols/): Understand how VAAs enable cross-chain messaging and how to handle them using Wormhole's TypeScript and Solidity SDKs.
[Wormhole TS SDK](https://wormhole.com/docs/build/toolkit/typescript-sdk/wormhole-sdk/): Explore Wormhole's TypeScript SDK and learn how to perform different types of transfers, including native, token, and USDC.
[Interacting with CCTP Contracts](https://wormhole.com/docs/build/transfers/cctp/): Learn how to interact directly with Circle's CCTP Bridge contracts, including TokenMessenger, TokenMinter, and MessageTransmitter.
[Configure Your Connect Widget v0](https://wormhole.com/docs/build/transfers/connect/configuration-v0/): Configure Wormhole Connect v0 for React or HTML, set themes, define tokens, networks, and customize RPC endpoints for optimized blockchain interactions.
[Connect Data Configuration](https://wormhole.com/docs/build/transfers/connect/configuration/configure-data/): Configure Wormhole Connect v1 (latest) with custom chains, tokens, routes, and more for enhanced blockchain interoperability.
[Connect Theme & UI Customization](https://wormhole.com/docs/build/transfers/connect/configuration/configure-theme/): Learn how to style Wormhole Connect with custom color schemes, fonts, layouts, and menus for a streamlined user experience.
[Wormhole Connect](https://wormhole.com/docs/build/transfers/connect/configuration/): Wormhole Connect is a React widget offering an easy-to-use interface to facilitate cross-chain asset transfers via Wormhole directly in a web application.
[Connect FAQs](https://wormhole.com/docs/build/transfers/connect/faqs/): Common questions and detailed answers about using Wormhole Connect, including supported assets, chains, customization, and integration options.
[Features](https://wormhole.com/docs/build/transfers/connect/features/): Explore a comprehensive Feature Support matrix and explain Wormhole's capabilities across networks for Token Bridge, CCTP, ETH Bridge, and more.
[Wormhole Connect](https://wormhole.com/docs/build/transfers/connect/): Wormhole Connect is a React widget offering an easy-to-use interface to facilitate multichain asset transfers via Wormhole directly in a web application.
[Overview](https://wormhole.com/docs/build/transfers/connect/overview/): Explore Wormhole Connect, the React widget that allows you to offer an easy-to-use UI for cross-chain asset transfers via Wormhole in a web application.
[Routes](https://wormhole.com/docs/build/transfers/connect/routes/): Explore Wormhole Connect's routing capabilities for asset transfers, featuring Token Bridge, CCTP, NTT, and various blockchain-specific routes for optimal UX.
[Wormhole Connect v1.0 Migration Guide](https://wormhole.com/docs/build/transfers/connect/upgrade/): Learn how to migrate to Wormhole Connect v1.0, with step-by-step guidance on updating your package and configuration.
[Multichain Transfers](https://wormhole.com/docs/build/transfers/): This section guides you through using Wormhole products to securely and efficiently transfer assets and messages across multiple blockchains.
[NTT CLI Commands](https://wormhole.com/docs/build/transfers/native-token-transfers/cli-commands/): A comprehensive guide to the Native Token Transfers (NTT) CLI, detailing commands for managing token transfers across chains within the Wormhole ecosystem.
[Native Token Transfers Access Control](https://wormhole.com/docs/build/transfers/native-token-transfers/configuration/access-control/): Learn about the owner and pauser access roles for the NTT manager contract, which can be used to pause and un-pause token transfers.
[Native Token Transfers (NTT) - Configuration](https://wormhole.com/docs/build/transfers/native-token-transfers/configuration/): This section contains information on configuring Native Token Transfers (NTT), including guidance on setting Owner and Pauser access control roles and management of rate-limiting.
[Native Token Transfers Rate Limiting](https://wormhole.com/docs/build/transfers/native-token-transfers/configuration/rate-limiting/): Learn about rate limits in Wormhole NTT by configuring send/receive limits, queuing, and canceling flows to manage multichain token transfers efficiently.
[Native Token Transfers EVM Deployment](https://wormhole.com/docs/build/transfers/native-token-transfers/deployment-process/deploy-to-evm/): Deploy and configure Wormhole’s Native Token Transfers (NTT) for EVM chains, including setup, token compatibility, mint/burn modes, and CLI usage.
[Native Token Transfers Solana Deployment](https://wormhole.com/docs/build/transfers/native-token-transfers/deployment-process/deploy-to-solana/): Deploy and configure Wormhole's Native Token Transfers (NTT) for Solana, including setup, token compatibility, mint/burn modes, and CLI usage.
[Deploy Native Token Transfers with Launchpad](https://wormhole.com/docs/build/transfers/native-token-transfers/deployment-process/evm-launchpad/): Deploy a new token or extend an existing one across multiple chains with the NTT Launchpad. Manage transfers, supply, and settings—all from a single platform.
[Native Token Transfers (NTT) - Deployment](https://wormhole.com/docs/build/transfers/native-token-transfers/deployment-process/): This section provides information on installing Wormhole's Native Token Transfer framework, deployment to EVM and Solana, and post deployment NTT maintenance.
[Native Token Transfers Installation](https://wormhole.com/docs/build/transfers/native-token-transfers/deployment-process/installation/): Learn how to Install Wormhole’s Native Token Transfers (NTT) framework, a flexible and composable framework for transferring tokens across blockchains.
[Native Token Transfers Post Deployment](https://wormhole.com/docs/build/transfers/native-token-transfers/deployment-process/post-deployment/): Learn post-deployment guidelines for optimizing Wormhole NTT, which include testing, security, frontend integration, ecosystem coordination, and monitoring.
[Troubleshooting NTT Deployment](https://wormhole.com/docs/build/transfers/native-token-transfers/deployment-process/troubleshooting/): Resolve common issues in NTT deployment with this troubleshooting guide covering Solana, EVM, mint authority, decimals, and rate limits.
[Native Token Transfers FAQs](https://wormhole.com/docs/build/transfers/native-token-transfers/faqs/): Frequently asked questions about Wormhole Native Token Transfers, including cross-chain lending, SDK usage, custom RPCs, and integration challenges.
[Native Token Transfers (NTT)](https://wormhole.com/docs/build/transfers/native-token-transfers/): This section provides comprehensive guidance on configuring, deploying, and managing your Native Token Transfers (NTT) integration.
[Managers and Transceivers](https://wormhole.com/docs/build/transfers/native-token-transfers/managers-transceivers/): Explore the roles of Managers and Transceivers in NTT cross-chain token transfers, including key functions, lifecycle events, and rate-limiting mechanisms.
[Wormhole Settlement FAQs](https://wormhole.com/docs/build/transfers/settlement/faqs/): Frequently asked questions about Wormhole Settlement, including smart contract usage, auction fallback, and message execution.
[Wormhole Settlement](https://wormhole.com/docs/build/transfers/settlement/): Start building with Wormhole Settlement; integrate with the Liquidity Layer and set up Solvers to enable seamless cross-chain asset transfers.
[Wormhole Settlement Liquidity Layer](https://wormhole.com/docs/build/transfers/settlement/liquidity-layer/): Learn how to build on the Wormhole Liquidity Layer, the underlying chain abstraction infrastructure layer for protocols across Wormhole-connected ecosystems.
[Wormhole Settlement Solver](https://wormhole.com/docs/build/transfers/settlement/solver/): Set up, configure, and run a Wormhole Settlement Solver on Solana's Matching Engine to fulfill cross-chain transfers efficiently and securely.
[Get Started with Token Bridge](https://wormhole.com/docs/build/transfers/token-bridge/): Learn how to integrate Wormhole's Token Bridge for seamless multichain token transfers with a lock-and-mint mechanism and cross-chain asset management.
[Run Infrastructure Services](https://wormhole.com/docs/infrastructure/): Follow the guides in this section to learn how to run off-chain infrastructure services, such as running a spy or a customized relayer.
[Relayers](https://wormhole.com/docs/infrastructure/relayers/): Learn how to develop your own custom off-chain relaying service, giving you greater control and flexibility than using Wormhole-deployed relayers.
[Run a Relayer](https://wormhole.com/docs/infrastructure/relayers/run-relayer/): Learn how to build and configure your own off-chain custom relaying solution to relay Wormhole messages for your applications using the Relayer Engine.
[Spy](https://wormhole.com/docs/infrastructure/spy/): Discover everything you need to about the Wormhole Spy, a daemon that watches the Guardian Network and subscribe to signed messages.
[Run a Spy](https://wormhole.com/docs/infrastructure/spy/run-spy/): Learn how to run a Spy locally to listen for and forward messages (Verifiable Action Approvals, or VAAs) published on the Wormhole network.
[Glossary](https://wormhole.com/docs/learn/glossary/): Explore a comprehensive glossary of technical terms and key concepts used in the Wormhole network, covering Chain ID, Guardian, VAA, and more.
[MultiGov Architecture](https://wormhole.com/docs/learn/governance/architecture/): Discover MultiGov's hub-and-spoke architecture, enabling secure cross-chain governance with Wormhole’s interoperability and decentralized coordination.
[MultiGov Theoretical FAQs](https://wormhole.com/docs/learn/governance/faq/): Find answers to common questions about MultiGov, covering cross-chain governance, technical setup, security, proposal creation, and more.
[Learn about MultiGov](https://wormhole.com/docs/learn/governance/): Explore the MultiGov documentation for a comprehensive guide covering architecture, deployment, upgrading, integration, and FAQs.
[MultiGov Overview](https://wormhole.com/docs/learn/governance/overview/): Explore MultiGov, a cross-chain governance system using Wormhole for seamless voting and proposal execution across multiple blockchain networks.
[Learn about Wormhole](https://wormhole.com/docs/learn/): Learn the basics of Wormhole, covering its architecture, messaging protocols, and how it enables multichain communication and asset transfers.
[Architecture](https://wormhole.com/docs/learn/infrastructure/architecture/): Overview of Wormhole's architecture, detailing key on-chain and off-chain components like the Core Contract, Guardian Network, and relayers.
[Core Contracts](https://wormhole.com/docs/learn/infrastructure/core-contracts/): Discover Wormhole's Core Contracts, which enable multichain communication with message sending, receiving, and multicast features for efficient synchronization.
[Guardians](https://wormhole.com/docs/learn/infrastructure/guardians/): Explore Wormhole's Guardian Network, a decentralized system for secure, scalable cross-chain communication across various blockchain ecosystems.
[Infrastructure Components](https://wormhole.com/docs/learn/infrastructure/): Explore Wormhole's infrastructure, including the key components that enable secure multichain communication and asset transfers across blockchain networks.
[Relayers](https://wormhole.com/docs/learn/infrastructure/relayer/): Discover the role of relayers in the Wormhole network, including client-side, custom, and Wormhole-deployed types, for secure cross-chain communication.
[Spy](https://wormhole.com/docs/learn/infrastructure/spy/): Discover Wormhole's Spy daemon, which subscribes to gossiped messages in the Guardian Network, including VAAs and Observations, with setup instructions.
[VAAs](https://wormhole.com/docs/learn/infrastructure/vaas/): Learn about Verified Action Approvals (VAAs) in Wormhole, their structure, validation, and role in cross-chain communication.
[Introduction to Wormhole](https://wormhole.com/docs/learn/introduction/): Wormhole is a protocol for seamless communication between blockchains, enabling cross-chain applications and integrations.
[Security](https://wormhole.com/docs/learn/security/): Explore Wormhole's security features, including the Guardian network, governance, monitoring, open-source development, and bug bounty programs.
[Circle's CCTP Bridge](https://wormhole.com/docs/learn/transfers/cctp/): Unlock fast USDC transfers with Wormhole's integration of Circle's CCTP, featuring automatic relaying via the Wormhole relayer and native gas solutions.
[Multichain Transfers](https://wormhole.com/docs/learn/transfers/): This section introduces the core messaging protocols that power seamless multichain communication and asset transfer within the Wormhole ecosystem.
[Native Token Transfers Architecture](https://wormhole.com/docs/learn/transfers/native-token-transfers/architecture/): Explore Wormhole's Native Token Transfers architecture, which covers components, message flow, rate limiting, and custom transceivers.
[Native Token Transfers - Deployment Models](https://wormhole.com/docs/learn/transfers/native-token-transfers/deployment/): Explore Wormhole's Native Token Transfers deployment models——hub-and-spoke, burn-and-mint——for seamless cross-chain token transfers.
[A Quick Look at Native Token Transfers](https://wormhole.com/docs/learn/transfers/native-token-transfers/): This section covers Wormhole's Native Token Transfers (NTT), an open source, flexible, and composable framework for transferring tokens across blockchains.
[Native Token Transfers Overview](https://wormhole.com/docs/learn/transfers/native-token-transfers/overview/): Explore Wormhole's Native Token Transfers for flexible cross-chain transfers with full control over token behavior, security, and integration features.
[Native Token Transfers Security](https://wormhole.com/docs/learn/transfers/native-token-transfers/security/): Explore the security measures of Native Token Transfers, including the Global Accountant and governance strategies for seamless token safety.
[Settlement Protocol Architecture](https://wormhole.com/docs/learn/transfers/settlement/architecture/): Explore Wormhole Settlement's native swap protocols—Liquidity Layer, Mayan Swift, and MCTP—for scalable, efficient cross-chain asset transfers.
[Wormhole Settlement](https://wormhole.com/docs/learn/transfers/settlement/): Learn about Wormhole Settlement, an intent-based solution enabling fast and efficient asset transfers across Ethereum, Solana, Sui, and more.
[Wormhole Settlement Overview](https://wormhole.com/docs/learn/transfers/settlement/overview/): Discover Wormhole Settlement, enabling fast, intent-based asset transfers across Ethereum, Solana, Sui, and more for institutions and builders.
[Token Bridge](https://wormhole.com/docs/learn/transfers/token-bridge/): Learn about Wormhole's Token Bridge for cross-chain transfers using lock and mint mechanisms, ensuring secure and efficient asset movement.
[Wormhole Connect Tutorials](https://wormhole.com/docs/tutorials/by-product/connect/): Enable cross-chain connectivity with Wormhole Connect. Learn integration and simplify user experiences across multiple blockchains.
[Integrate Connect into a React DApp Tutorial](https://wormhole.com/docs/tutorials/by-product/connect/react-dapp/): Learn how to use Wormhole Connect to transfers tokens cross-chain seamlessly between Sui and Avalanche Fuji with this step-by-step guide.
[Create Cross-Chain Contracts](https://wormhole.com/docs/tutorials/by-product/contract-integrations/cross-chain-contracts/): Learn how to create cross-chain contracts using Wormhole's Solidity SDK. Deploy contracts on Avalanche and Celo Testnets and send messages across chains.
[Cross-Chain Token Transfers](https://wormhole.com/docs/tutorials/by-product/contract-integrations/cross-chain-token-contracts/): Learn how to create cross-chain token transfers using Wormhole's Solidity SDK. Build and deploy smart contracts to send tokens from one blockchain to another.
[Cross-Chain Contract Integration Tutorials](https://wormhole.com/docs/tutorials/by-product/contract-integrations/): Master cross-chain smart contracts with Wormhole. Learn messaging, token transfers, and secure, scalable dApp deployments across blockchains.
[Tutorials by Product](https://wormhole.com/docs/tutorials/by-product/): Discover product-specific Wormhole tutorials. Learn setup, integration, and advanced features to develop cross-chain apps confidently.
[Multichain Assets Tutorials](https://wormhole.com/docs/tutorials/by-product/multichain-assets/): Explore comprehensive, step-by-step tutorials on how to register, manage, and work with multichain assets within the Wormhole ecosystem.
[Create Multichain Tokens](https://wormhole.com/docs/tutorials/by-product/multichain-assets/multichain-token/): Learn how to create a multichain token, bridge tokens across blockchains, and update metadata for seamless multichain interoperability.
[Step-by-Step MultiGov Tutorials](https://wormhole.com/docs/tutorials/by-product/multigov/): Access step-by-step guides for executing cross-chain governance actions, including treasury management proposals with MultiGov and Wormhole.
[MultiGov Guides](https://wormhole.com/docs/tutorials/by-product/multigov/treasury-proposal/): Learn how to initiate a proposal on a hub chain, vote from spoke chains, aggregate the votes, and finally execute the proposal using Wormhole's MultiGov.
[Wormhole Settlements](https://wormhole.com/docs/tutorials/by-product/settlements/.index/): Follow step-by-step tutorials to integrate Wormhole Settlement Routes using the SDK for seamless cross-chain swaps and efficient asset transfers.
[Wormhole Settlements](https://wormhole.com/docs/tutorials/by-product/settlements/.settlement-routes/): Learn how to integrate Wormhole Settlement Routes using the SDK to simplify cross-chain swaps, manage fees, and execute seamless transactions.
[Wormhole SDK Tutorials](https://wormhole.com/docs/tutorials/by-product/wormhole-sdk/): Master the Wormhole SDK. Build robust cross-chain dApps with messaging, token bridging, and governance across multiple networks.
[Transfer Tokens via Token Bridge Tutorial](https://wormhole.com/docs/tutorials/by-product/wormhole-sdk/tokens-via-token-bridge/): Learn to build a cross-chain native token transfer app using Wormhole’s TypeScript SDK, supporting native token transfers across EVM and non-EVM chains
[Transfer USDC via CCTP and Wormhole SDK](https://wormhole.com/docs/tutorials/by-product/wormhole-sdk/usdc-via-cctp/): Learn how to perform USDC cross-chain transfers using Wormhole SDK and Circle's CCTP. Supports manual, automatic, and partial transfer recovery.
[Wormholescan API Tutorials](https://wormhole.com/docs/tutorials/by-product/wormholescan/): Explore step-by-step guides on using the Wormholescan API to fetch VAAs, validate signatures, check redemption status, and process cross-chain transactions.
[Replace Outdated Signatures in VAAs](https://wormhole.com/docs/tutorials/by-product/wormholescan/replace-signatures/): Learn how to fetch, validate, and replace outdated signatures in Wormhole VAAs using Wormholescan and the Wormhole SDK to ensure seamless processing.
[Tutorials](https://wormhole.com/docs/tutorials/): This section contains step-by-step tutorials to start developing with Wormhole, including creating cross-chain contracts and multichain transfers.